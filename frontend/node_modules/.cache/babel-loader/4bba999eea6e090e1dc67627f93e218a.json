{"remainingRequest":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\api\\exam.js","dependencies":[{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\api\\exam.js","mtime":1683548887934},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 考试相关的接口，包括考试、问题、选项和评分等接口\n\nimport api from \"./index\";\nimport { axios } from \"../utils/request\";\nexport function getQuestionList(parameter) {\n  return axios({\n    url: api.ExamQuestionList,\n    method: 'get',\n    params: parameter\n  });\n}\nexport function getQuestionAll() {\n  return axios({\n    url: api.ExamQuestionAll,\n    method: 'get'\n  });\n}\nexport function questionUpdate(parameter) {\n  console.log(parameter);\n  return axios({\n    url: api.ExamQuestionUpdate,\n    method: 'post',\n    data: parameter\n  });\n}\nexport function getQuestionSelection() {\n  return axios({\n    url: api.ExamQuestionSelection,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}\nexport function questionCreate(parameter) {\n  console.log(parameter);\n  return axios({\n    url: api.ExamQuestionCreate,\n    method: 'post',\n    data: parameter\n  });\n}\nexport function getExamList(parameter) {\n  return axios({\n    url: api.ExamList,\n    method: 'get',\n    params: parameter\n  });\n}\nexport function getExamAll() {\n  return axios({\n    url: api.ExamAll,\n    method: 'get'\n  });\n}\n\n// 获取所有问题，按照单选、多选和判断进行分类\nexport function getExamQuestionTypeList() {\n  return axios({\n    url: api.ExamQuestionTypeList,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}\nexport function getExamCardList() {\n  return axios({\n    url: api.ExamCardList,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}\nexport function examCreate(parameter) {\n  console.log(parameter);\n  return axios({\n    url: api.ExamCreate,\n    method: 'post',\n    data: parameter\n  });\n}\nexport function examUpdate(parameter) {\n  console.log(parameter);\n  return axios({\n    url: api.ExamUpdate,\n    method: 'post',\n    data: parameter\n  });\n}\nexport function getExamDetail(examId) {\n  return axios({\n    url: api.ExamDetail + examId,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}\nexport function getExamRecordDetail(recordId) {\n  return axios({\n    url: api.recordDetail + recordId,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}\nexport function getQuestionDetail(questionId) {\n  return axios({\n    url: api.QuestionDetail + questionId,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}\nexport function finishExam(examId, answersMap) {\n  console.log(answersMap);\n  return axios({\n    url: api.FinishExam + examId,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    data: answersMap\n  });\n}\nexport function getExamRecordList() {\n  return axios({\n    url: api.ExamRecordList,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n}",{"version":3,"names":["api","axios","getQuestionList","parameter","url","ExamQuestionList","method","params","getQuestionAll","ExamQuestionAll","questionUpdate","console","log","ExamQuestionUpdate","data","getQuestionSelection","ExamQuestionSelection","headers","questionCreate","ExamQuestionCreate","getExamList","ExamList","getExamAll","ExamAll","getExamQuestionTypeList","ExamQuestionTypeList","getExamCardList","ExamCardList","examCreate","ExamCreate","examUpdate","ExamUpdate","getExamDetail","examId","ExamDetail","getExamRecordDetail","recordId","recordDetail","getQuestionDetail","questionId","QuestionDetail","finishExam","answersMap","FinishExam","getExamRecordList","ExamRecordList"],"sources":["D:/JuniorStudent/spring-boot-online-exam/frontend/src/api/exam.js"],"sourcesContent":["// 考试相关的接口，包括考试、问题、选项和评分等接口\r\n\r\nimport api from './index'\r\nimport { axios } from '../utils/request'\r\n\r\nexport function getQuestionList (parameter) {\r\n  return axios({\r\n    url: api.ExamQuestionList,\r\n    method: 'get',\r\n    params: parameter\r\n  })\r\n}\r\n\r\nexport function getQuestionAll () {\r\n  return axios({\r\n    url: api.ExamQuestionAll,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function questionUpdate (parameter) {\r\n  console.log(parameter)\r\n  return axios({\r\n    url: api.ExamQuestionUpdate,\r\n    method: 'post',\r\n    data: parameter\r\n  })\r\n}\r\n\r\nexport function getQuestionSelection () {\r\n  return axios({\r\n    url: api.ExamQuestionSelection,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n\r\nexport function questionCreate (parameter) {\r\n  console.log(parameter)\r\n  return axios({\r\n    url: api.ExamQuestionCreate,\r\n    method: 'post',\r\n    data: parameter\r\n  })\r\n}\r\n\r\nexport function getExamList (parameter) {\r\n  return axios({\r\n    url: api.ExamList,\r\n    method: 'get',\r\n    params: parameter\r\n  })\r\n}\r\n\r\nexport function getExamAll () {\r\n  return axios({\r\n    url: api.ExamAll,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取所有问题，按照单选、多选和判断进行分类\r\nexport function getExamQuestionTypeList () {\r\n  return axios({\r\n    url: api.ExamQuestionTypeList,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n\r\nexport function getExamCardList () {\r\n  return axios({\r\n    url: api.ExamCardList,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n\r\nexport function examCreate (parameter) {\r\n  console.log(parameter)\r\n  return axios({\r\n    url: api.ExamCreate,\r\n    method: 'post',\r\n    data: parameter\r\n  })\r\n}\r\n\r\nexport function examUpdate (parameter) {\r\n  console.log(parameter)\r\n  return axios({\r\n    url: api.ExamUpdate,\r\n    method: 'post',\r\n    data: parameter\r\n  })\r\n}\r\n\r\nexport function getExamDetail (examId) {\r\n  return axios({\r\n    url: api.ExamDetail + examId,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n\r\nexport function getExamRecordDetail (recordId) {\r\n  return axios({\r\n    url: api.recordDetail + recordId,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n\r\nexport function getQuestionDetail (questionId) {\r\n  return axios({\r\n    url: api.QuestionDetail + questionId,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n\r\nexport function finishExam (examId, answersMap) {\r\n  console.log(answersMap)\r\n  return axios({\r\n    url: api.FinishExam + examId,\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    },\r\n    data: answersMap\r\n  })\r\n}\r\n\r\nexport function getExamRecordList () {\r\n  return axios({\r\n    url: api.ExamRecordList,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n  })\r\n}\r\n"],"mappings":"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"}]}