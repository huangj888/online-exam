{"remainingRequest":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\user\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\user\\Register.vue","mtime":1683548887965},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/IT/projectOfweb/spring-boot-online-exam/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mixinDevice } from \"../../utils/mixin.js\";\nimport { getSmsCaptcha } from \"../../api/login\";\nimport { register } from \"../../api/user\";\nvar levelNames = {\n  0: '低',\n  1: '低',\n  2: '中',\n  3: '强'\n};\nvar levelClass = {\n  0: 'error',\n  1: 'error',\n  2: 'warning',\n  3: 'success'\n};\nvar levelColor = {\n  0: '#ff0000',\n  1: '#ff0000',\n  2: '#ff7e05',\n  3: '#52c41a'\n};\nexport default {\n  name: 'Register',\n  components: {},\n  mixins: [mixinDevice],\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      },\n      registerBtn: false\n    };\n  },\n  computed: {\n    passwordLevelClass: function passwordLevelClass() {\n      return levelClass[this.state.passwordLevel];\n    },\n    passwordLevelName: function passwordLevelName() {\n      return levelNames[this.state.passwordLevel];\n    },\n    passwordLevelColor: function passwordLevelColor() {\n      return levelColor[this.state.passwordLevel];\n    }\n  },\n  methods: {\n    handlePasswordLevel: function handlePasswordLevel(rule, value, callback) {\n      var level = 0;\n\n      // 判断这个字符串中有没有数字\n      if (/[0-9]/.test(value)) {\n        level++;\n      }\n      // 判断字符串中有没有字母\n      if (/[a-zA-Z]/.test(value)) {\n        level++;\n      }\n      // 判断字符串中有没有特殊符号\n      if (/[^0-9a-zA-Z_]/.test(value)) {\n        level++;\n      }\n      this.state.passwordLevel = level;\n      this.state.percent = level * 30;\n      if (level >= 2) {\n        if (level >= 3) {\n          this.state.percent = 100;\n        }\n        callback();\n      } else {\n        if (level === 0) {\n          this.state.percent = 10;\n        }\n        callback(new Error('密码强度不够'));\n      }\n    },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      var password = this.form.getFieldValue('password');\n      console.log('value', value);\n      if (value === undefined) {\n        callback(new Error('请输入密码'));\n      }\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'));\n      }\n      callback();\n    },\n    handlePhoneCheck: function handlePhoneCheck(rule, value, callback) {\n      console.log('handlePhoneCheck, rule:', rule);\n      console.log('handlePhoneCheck, value', value);\n      console.log('handlePhoneCheck, callback', callback);\n      callback();\n    },\n    handlePasswordInputClick: function handlePasswordInputClick() {\n      if (!this.isMobile()) {\n        this.state.passwordLevelChecked = true;\n        return;\n      }\n      this.state.passwordLevelChecked = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var validateFields = this.form.validateFields,\n        $router = this.$router,\n        $message = this.$message;\n      validateFields({\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          // 在这里进行Rest请求，params参数如右：{email: \"1648266192@qq.com\", password: \"123456\", password2: \"123456\", mobile: \"17601324488\", captcha: \"69076\"}\n          register(values).then(function (res) {\n            // 成功就跳转到结果页面\n            console.log(res);\n            $router.push({\n              name: 'registerResult',\n              params: _objectSpread({}, values)\n            });\n          }).catch(function (err) {\n            // 失败就弹出警告消息\n            $message.error(\"load user err: \".concat(err.message));\n          });\n        }\n      });\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this = this;\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n        state = this.state,\n        $message = this.$message,\n        $notification = this.$notification;\n      validateFields(['mobile'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n          var hide = $message.loading('验证码发送中..', 0);\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(function (res) {\n            setTimeout(hide, 2500);\n            $notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            });\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n            _this.requestFailed(err);\n          });\n        }\n      });\n    },\n    requestFailed: function requestFailed(err) {\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      });\n      this.registerBtn = false;\n    }\n  },\n  watch: {\n    'state.passwordLevel': function statePasswordLevel(val) {\n      console.log(val);\n    }\n  }\n};",{"version":3,"names":["mixinDevice","getSmsCaptcha","register","levelNames","levelClass","levelColor","name","components","mixins","data","form","$form","createForm","state","time","smsSendBtn","passwordLevel","passwordLevelChecked","percent","progressColor","registerBtn","computed","passwordLevelClass","passwordLevelName","passwordLevelColor","methods","handlePasswordLevel","rule","value","callback","level","test","Error","handlePasswordCheck","password","getFieldValue","console","log","undefined","trim","handlePhoneCheck","handlePasswordInputClick","isMobile","handleSubmit","validateFields","$router","$message","force","err","values","then","res","push","params","_objectSpread","catch","error","concat","message","getCaptcha","e","_this","preventDefault","$notification","interval","window","setInterval","clearInterval","hide","loading","mobile","setTimeout","description","result","captcha","duration","requestFailed","response","watch","statePasswordLevel","val"],"sources":["src/views/user/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"main user-layout-register\">\r\n    <h3><span>注册</span></h3>\r\n    <a-form ref=\"formRegister\" :form=\"form\" id=\"formRegister\">\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"text\"\r\n          placeholder=\"邮箱\"\r\n          v-decorator=\"['email', {rules: [{ required: true, type: 'email', message: '请输入邮箱地址' }], validateTrigger: ['change', 'blur']}]\"\r\n        ></a-input>\r\n      </a-form-item>\r\n\r\n      <a-popover placement=\"rightTop\" trigger=\"click\" :visible=\"state.passwordLevelChecked\">\r\n        <template slot=\"content\">\r\n          <div :style=\"{ width: '240px' }\">\r\n            <div :class=\"['user-register', passwordLevelClass]\">强度：<span>{{ passwordLevelName }}</span></div>\r\n            <a-progress :percent=\"state.percent\" :showInfo=\"false\" :strokeColor=\" passwordLevelColor \"/>\r\n            <div style=\"margin-top: 10px;\">\r\n              <span>请至少输入 6 个字符。请不要使用容易被猜到的密码。</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <a-form-item>\r\n          <a-input\r\n            size=\"large\"\r\n            type=\"password\"\r\n            @click=\"handlePasswordInputClick\"\r\n            autocomplete=\"false\"\r\n            placeholder=\"至少6位密码，区分大小写\"\r\n            v-decorator=\"['password', {rules: [{ required: true, message: '至少6位密码，区分大小写'}, { validator: this.handlePasswordLevel }], validateTrigger: ['change', 'blur']}]\"\r\n          ></a-input>\r\n        </a-form-item>\r\n      </a-popover>\r\n\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"password\"\r\n          autocomplete=\"false\"\r\n          placeholder=\"确认密码\"\r\n          v-decorator=\"['password2', {rules: [{ required: true, message: '至少6位密码，区分大小写' }, { validator: this.handlePasswordCheck }], validateTrigger: ['change', 'blur']}]\"\r\n        ></a-input>\r\n      </a-form-item>\r\n\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          placeholder=\"11 位手机号\"\r\n          v-decorator=\"['mobile', {rules: [{ required: true, message: '请输入正确的手机号', pattern: /^1[3456789]\\d{9}$/ }, { validator: this.handlePhoneCheck } ], validateTrigger: ['change', 'blur'] }]\"\r\n        >\r\n          <a-select slot=\"addonBefore\" size=\"large\" defaultValue=\"+86\">\r\n            <a-select-option value=\"+86\">+86</a-select-option>\r\n            <a-select-option value=\"+87\">+87</a-select-option>\r\n          </a-select>\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-row :gutter=\"16\">\r\n        <a-col class=\"gutter-row\" :span=\"16\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"text\"\r\n              placeholder=\"验证码\"\r\n              v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n        </a-col>\r\n        <a-col class=\"gutter-row\" :span=\"8\">\r\n          <a-button\r\n            class=\"getCaptcha\"\r\n            size=\"large\"\r\n            :disabled=\"state.smsSendBtn\"\r\n            @click.stop.prevent=\"getCaptcha\"\r\n            v-text=\"!state.smsSendBtn && '获取验证码'||(state.time+' s')\"></a-button>\r\n        </a-col>\r\n      </a-row>\r\n\r\n      <a-form-item>\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"register-button\"\r\n          :loading=\"registerBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"registerBtn\">注册\r\n        </a-button>\r\n        <router-link class=\"login\" :to=\"{ name: 'login' }\">使用已有账户登录</router-link>\r\n      </a-form-item>\r\n\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixinDevice } from '../../utils/mixin.js'\r\nimport { getSmsCaptcha } from '../../api/login'\r\nimport { register } from '../../api/user'\r\n\r\nconst levelNames = {\r\n  0: '低',\r\n  1: '低',\r\n  2: '中',\r\n  3: '强'\r\n}\r\nconst levelClass = {\r\n  0: 'error',\r\n  1: 'error',\r\n  2: 'warning',\r\n  3: 'success'\r\n}\r\nconst levelColor = {\r\n  0: '#ff0000',\r\n  1: '#ff0000',\r\n  2: '#ff7e05',\r\n  3: '#52c41a'\r\n}\r\nexport default {\r\n  name: 'Register',\r\n  components: {},\r\n  mixins: [mixinDevice],\r\n  data () {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false,\r\n        passwordLevel: 0,\r\n        passwordLevelChecked: false,\r\n        percent: 10,\r\n        progressColor: '#FF0000'\r\n      },\r\n      registerBtn: false\r\n    }\r\n  },\r\n  computed: {\r\n    passwordLevelClass () {\r\n      return levelClass[this.state.passwordLevel]\r\n    },\r\n    passwordLevelName () {\r\n      return levelNames[this.state.passwordLevel]\r\n    },\r\n    passwordLevelColor () {\r\n      return levelColor[this.state.passwordLevel]\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    handlePasswordLevel (rule, value, callback) {\r\n      let level = 0\r\n\r\n      // 判断这个字符串中有没有数字\r\n      if (/[0-9]/.test(value)) {\r\n        level++\r\n      }\r\n      // 判断字符串中有没有字母\r\n      if (/[a-zA-Z]/.test(value)) {\r\n        level++\r\n      }\r\n      // 判断字符串中有没有特殊符号\r\n      if (/[^0-9a-zA-Z_]/.test(value)) {\r\n        level++\r\n      }\r\n      this.state.passwordLevel = level\r\n      this.state.percent = level * 30\r\n      if (level >= 2) {\r\n        if (level >= 3) {\r\n          this.state.percent = 100\r\n        }\r\n        callback()\r\n      } else {\r\n        if (level === 0) {\r\n          this.state.percent = 10\r\n        }\r\n        callback(new Error('密码强度不够'))\r\n      }\r\n    },\r\n\r\n    handlePasswordCheck (rule, value, callback) {\r\n      const password = this.form.getFieldValue('password')\r\n      console.log('value', value)\r\n      if (value === undefined) {\r\n        callback(new Error('请输入密码'))\r\n      }\r\n      if (value && password && value.trim() !== password.trim()) {\r\n        callback(new Error('两次密码不一致'))\r\n      }\r\n      callback()\r\n    },\r\n\r\n    handlePhoneCheck (rule, value, callback) {\r\n      console.log('handlePhoneCheck, rule:', rule)\r\n      console.log('handlePhoneCheck, value', value)\r\n      console.log('handlePhoneCheck, callback', callback)\r\n\r\n      callback()\r\n    },\r\n\r\n    handlePasswordInputClick () {\r\n      if (!this.isMobile()) {\r\n        this.state.passwordLevelChecked = true\r\n        return\r\n      }\r\n      this.state.passwordLevelChecked = false\r\n    },\r\n\r\n    handleSubmit () {\r\n      const { form: { validateFields }, $router, $message } = this\r\n      validateFields({ force: true }, (err, values) => {\r\n        if (!err) {\r\n          // 在这里进行Rest请求，params参数如右：{email: \"1648266192@qq.com\", password: \"123456\", password2: \"123456\", mobile: \"17601324488\", captcha: \"69076\"}\r\n          register(values).then(res => {\r\n            // 成功就跳转到结果页面\r\n            console.log(res)\r\n            $router.push({ name: 'registerResult', params: { ...values } })\r\n          }).catch(err => {\r\n            // 失败就弹出警告消息\r\n            $message.error(`load user err: ${err.message}`)\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n    getCaptcha (e) {\r\n      e.preventDefault()\r\n      const { form: { validateFields }, state, $message, $notification } = this\r\n\r\n      validateFields(['mobile'], { force: true },\r\n        (err, values) => {\r\n          if (!err) {\r\n            state.smsSendBtn = true\r\n\r\n            const interval = window.setInterval(() => {\r\n              if (state.time-- <= 0) {\r\n                state.time = 60\r\n                state.smsSendBtn = false\r\n                window.clearInterval(interval)\r\n              }\r\n            }, 1000)\r\n\r\n            const hide = $message.loading('验证码发送中..', 0)\r\n\r\n            getSmsCaptcha({ mobile: values.mobile }).then(res => {\r\n              setTimeout(hide, 2500)\r\n              $notification['success']({\r\n                message: '提示',\r\n                description: '验证码获取成功，您的验证码为：' + res.result.captcha,\r\n                duration: 8\r\n              })\r\n            }).catch(err => {\r\n              setTimeout(hide, 1)\r\n              clearInterval(interval)\r\n              state.time = 60\r\n              state.smsSendBtn = false\r\n              this.requestFailed(err)\r\n            })\r\n          }\r\n        }\r\n      )\r\n    },\r\n    requestFailed (err) {\r\n      this.$notification['error']({\r\n        message: '错误',\r\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\r\n        duration: 4\r\n      })\r\n      this.registerBtn = false\r\n    }\r\n  },\r\n  watch: {\r\n    'state.passwordLevel' (val) {\r\n      console.log(val)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n  .user-register {\r\n\r\n    &.error {\r\n      color: #ff0000;\r\n    }\r\n\r\n    &.warning {\r\n      color: #ff7e05;\r\n    }\r\n\r\n    &.success {\r\n      color: #52c41a;\r\n    }\r\n\r\n  }\r\n\r\n  .user-layout-register {\r\n    .ant-input-group-addon:first-child {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n</style>\r\n<style lang=\"less\" scoped>\r\n  .user-layout-register {\r\n\r\n    & > h3 {\r\n      font-size: 16px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .getCaptcha {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n    }\r\n\r\n    .register-button {\r\n      width: 50%;\r\n    }\r\n\r\n    .login {\r\n      float: right;\r\n      line-height: 40px;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":"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"}]}