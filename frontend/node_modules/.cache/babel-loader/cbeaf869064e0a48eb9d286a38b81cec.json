{"remainingRequest":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\views\\list\\modules\\QuestionEditModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\views\\list\\modules\\QuestionEditModal.vue","mtime":1683548887963},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"../../../plugins/summernote\";\nimport $ from 'jquery';\nimport { questionUpdate } from \"../../../api/exam\";\nexport default {\n  // 问题查看的弹出框，用于查看问题/修改问题\n  name: 'QuestionEditModal',\n  data: function data() {\n    return {\n      visible: false,\n      size: 'default',\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      // 每个问题\n      question: {},\n      // 单选和判断题的答案\n      answerOptionId: '',\n      // 多选题的答案\n      answerOptionIds: [],\n      radioStyle: {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px'\n      },\n      name: '',\n      desc: ''\n    };\n  },\n  updated: function updated() {\n    this.initSummernote('summernote-question-name-edit');\n    this.initSummernote('summernote-question-desc-edit');\n    this.setSummernoteContent('summernote-question-name-edit', this.name);\n    this.setSummernoteContent('summernote-question-desc-edit', this.desc);\n  },\n  methods: {\n    initSummernote: function initSummernote(divId) {\n      console.log('初始化富文本插件：' + divId);\n      $('#' + divId).summernote({\n        lang: 'zh-CN',\n        placeholder: '请输入内容',\n        height: 200,\n        width: '100%',\n        htmlMode: true,\n        toolbar: [['style', ['bold', 'italic', 'underline', 'clear']], ['fontsize', ['fontsize']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']]],\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n        fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana'],\n        callbacks: {\n          onSubmit: function onSubmit() {\n            this.richContent = $('#summernote').summernote('code');\n          }\n        }\n      });\n    },\n    getSummernoteContent: function getSummernoteContent(divId) {\n      return $('#' + divId).summernote('code');\n    },\n    setSummernoteContent: function setSummernoteContent(divId, content) {\n      return $('#' + divId).summernote('code', content);\n    },\n    edit: function edit(record) {\n      this.name = record.name; // 题干\n      this.desc = record.description; // 解析\n      // 把当前的记录赋值到data中的变量\n      this.question = record;\n      // 上来先把之前的清理干净\n      this.answerOptionId = '';\n      this.answerOptionIds = [];\n      this.visible = true;\n      // 单选题的处理情况,设置默认值\n      for (var i = 0; i < this.question.options.length; i++) {\n        if (this.question.options[i].answer === true) {\n          // 设置单选题或者判断题答案\n          this.answerOptionId = this.question.options[i].id;\n          // 设置多选题的答案\n          this.answerOptionIds.push(this.question.options[i].id);\n        }\n      }\n    },\n    handleCancel: function handleCancel() {\n      // clear form & currentStep\n      this.visible = false;\n    },\n    handleSingleChange: function handleSingleChange(value) {\n      // 单选题的处理情况\n      for (var i = 0; i < this.question.options.length; i++) {\n        if (this.question.options[i].id === value) {\n          // 更新唯一的正确答案\n          this.question.options[i].answer = true;\n          // 设置答案的内容\n          this.answerOptionId = this.question.options[i].id;\n        } else {\n          // id不和答案相同地就设置为false，这样可以保证只有一个正确答案\n          this.question.options[i].answer = false;\n        }\n      }\n      console.log(\"Selected: \".concat(value));\n    },\n    handleMultiChange: function handleMultiChange(values) {\n      console.log(values);\n      // 直接更新选项id的数组\n      this.answerOptionIds = values;\n      // 更新question中options的answer位置\n      for (var i = 0; i < this.question.options.length; i++) {\n        // 遍历所有的题目的选项\n        // 取出一个选项的id\n        var id = this.question.options[i].id;\n        var isAnswer = false;\n        for (var j = 0; j < values.length; j++) {\n          // 拿着\n          var value = values[j];\n          if (id === value) {\n            // 说明这个选项是答案，设置为是答案，直接退出\n            isAnswer = true;\n            this.question.options[i].answer = true;\n            break; // 跳出内部的for循环\n          }\n        }\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\n        if (isAnswer === false) {\n          this.question.options[i].answer = false;\n        }\n      }\n    },\n    popupScroll: function popupScroll() {\n      console.log('popupScroll');\n    },\n    handleUpdate: function handleUpdate() {\n      var that = this;\n      that.question.name = that.getSummernoteContent('summernote-question-name-edit');\n      that.question.description = that.getSummernoteContent('summernote-question-desc-edit');\n      console.log(that.question);\n      // 把data中的question属性提交到后端，待写完后端接口\n      questionUpdate(that.question).then(function (res) {\n        // 成功就跳转到结果页面\n        console.log(res);\n        if (res.code === 0) {\n          that.$notification.success({\n            message: '更新成功',\n            description: '问题更新成功'\n          });\n          // 关闭弹出框\n          that.visible = false;\n          that.$emit('ok');\n        }\n      }).catch(function (err) {\n        // 失败就弹出警告消息\n        that.$notification.error({\n          message: '更新',\n          description: err.message\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["$","questionUpdate","name","data","visible","size","confirmLoading","form","$form","createForm","question","answerOptionId","answerOptionIds","radioStyle","display","height","lineHeight","desc","updated","initSummernote","setSummernoteContent","methods","divId","console","log","summernote","lang","placeholder","width","htmlMode","toolbar","fontSizes","fontNames","callbacks","onSubmit","richContent","getSummernoteContent","content","edit","record","description","i","options","length","answer","id","push","handleCancel","handleSingleChange","value","concat","handleMultiChange","values","isAnswer","j","popupScroll","handleUpdate","that","then","res","code","$notification","success","message","$emit","catch","err","error"],"sources":["src/views/list/modules/QuestionEditModal.vue"],"sourcesContent":["<template>\r\n  <a-modal title=\"编辑题目\" :width=\"640\" :visible=\"visible\" :confirmLoading=\"confirmLoading\" @cancel=\"handleCancel\">\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <h3><b>题干：</b></h3>\r\n        <div id=\"summernote-question-name-edit\" />\r\n        <ul v-show=\"question.type==='多选题'\">\r\n          <li v-for=\"option in question.options\" :key=\"option.id\">\r\n            <a-input v-model=\"option.content\" />\r\n          </li>\r\n        </ul>\r\n\r\n        <ul v-show=\"question.type!=='多选题'\">\r\n          <li v-for=\"option in question.options\" :key=\"option.id\">\r\n            <a-input v-model=\"option.content\" />\r\n          </li>\r\n        </ul>\r\n\r\n        <h3><b>答案：</b></h3>\r\n        <ul v-show=\"question.type!=='多选题'\">\r\n          <li>\r\n            <a-select :size=\"size\" :value=\"answerOptionId\" style=\"width: 100%\" @change=\"handleSingleChange\">\r\n              <a-select-option v-for=\"option in question.options\" :key=\"option.id\">\r\n                {{ option.content }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul v-show=\"question.type==='多选题'\">\r\n          <li>\r\n            <a-select\r\n              mode=\"multiple\"\r\n              :size=\"size\"\r\n              placeholder=\"Please select\"\r\n              :value=\"answerOptionIds\"\r\n              style=\"width: 100%\"\r\n              @change=\"handleMultiChange\"\r\n              @popupScroll=\"popupScroll\"\r\n            >\r\n              <a-select-option v-for=\"option in question.options\" :key=\"option.id\">\r\n                {{ option.content }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </li>\r\n        </ul>\r\n        <h3><b>解析：</b></h3>\r\n        <div id=\"summernote-question-desc-edit\" />\r\n      </a-form>\r\n    </a-spin>\r\n    <template slot=\"footer\">\r\n      <a-button key=\"cancel\" @click=\"handleCancel\">关闭</a-button>\r\n      <a-button key=\"update\" type=\"primary\" @click=\"handleUpdate\">更新</a-button>\r\n    </template>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport '../../../plugins/summernote'\r\nimport $ from 'jquery'\r\nimport { questionUpdate } from '../../../api/exam'\r\n\r\nexport default {\r\n  // 问题查看的弹出框，用于查看问题/修改问题\r\n  name: 'QuestionEditModal',\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      size: 'default',\r\n      confirmLoading: false,\r\n\r\n      form: this.$form.createForm(this),\r\n      // 每个问题\r\n      question: {},\r\n      // 单选和判断题的答案\r\n      answerOptionId: '',\r\n      // 多选题的答案\r\n      answerOptionIds: [],\r\n      radioStyle: {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px'\r\n      },\r\n      name: '',\r\n      desc: ''\r\n    }\r\n  },\r\n\r\n  updated () {\r\n    this.initSummernote('summernote-question-name-edit')\r\n    this.initSummernote('summernote-question-desc-edit')\r\n    this.setSummernoteContent('summernote-question-name-edit', this.name)\r\n    this.setSummernoteContent('summernote-question-desc-edit', this.desc)\r\n  },\r\n  methods: {\r\n    initSummernote (divId) {\r\n      console.log('初始化富文本插件：' + divId)\r\n      $('#' + divId).summernote({\r\n        lang: 'zh-CN',\r\n        placeholder: '请输入内容',\r\n        height: 200,\r\n        width: '100%',\r\n        htmlMode: true,\r\n        toolbar: [\r\n          ['style', ['bold', 'italic', 'underline', 'clear']],\r\n          ['fontsize', ['fontsize']],\r\n          ['fontname', ['fontname']],\r\n          ['para', ['ul', 'ol', 'paragraph']]\r\n        ],\r\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\r\n        fontNames: [\r\n          'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\r\n          'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\r\n          'Tahoma', 'Times New Roman', 'Verdana'\r\n        ],\r\n        callbacks: {\r\n          onSubmit: function () {\r\n            this.richContent = $('#summernote').summernote('code')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getSummernoteContent (divId) {\r\n      return $('#' + divId).summernote('code')\r\n    },\r\n    setSummernoteContent (divId, content) {\r\n      return $('#' + divId).summernote('code', content)\r\n    },\r\n    edit (record) {\r\n      this.name = record.name // 题干\r\n      this.desc = record.description // 解析\r\n      // 把当前的记录赋值到data中的变量\r\n      this.question = record\r\n      // 上来先把之前的清理干净\r\n      this.answerOptionId = ''\r\n      this.answerOptionIds = []\r\n      this.visible = true\r\n      // 单选题的处理情况,设置默认值\r\n      for (let i = 0; i < this.question.options.length; i++) {\r\n        if (this.question.options[i].answer === true) {\r\n          // 设置单选题或者判断题答案\r\n          this.answerOptionId = this.question.options[i].id\r\n          // 设置多选题的答案\r\n          this.answerOptionIds.push(this.question.options[i].id)\r\n        }\r\n      }\r\n    },\r\n\r\n    handleCancel () {\r\n      // clear form & currentStep\r\n      this.visible = false\r\n    },\r\n\r\n    handleSingleChange (value) {\r\n      // 单选题的处理情况\r\n      for (let i = 0; i < this.question.options.length; i++) {\r\n        if (this.question.options[i].id === value) {\r\n          // 更新唯一的正确答案\r\n          this.question.options[i].answer = true\r\n          // 设置答案的内容\r\n          this.answerOptionId = this.question.options[i].id\r\n        } else {\r\n          // id不和答案相同地就设置为false，这样可以保证只有一个正确答案\r\n          this.question.options[i].answer = false\r\n        }\r\n      }\r\n      console.log(`Selected: ${value}`)\r\n    },\r\n\r\n    handleMultiChange (values) {\r\n      console.log(values)\r\n      // 直接更新选项id的数组\r\n      this.answerOptionIds = values\r\n      // 更新question中options的answer位置\r\n      for (let i = 0; i < this.question.options.length; i++) { // 遍历所有的题目的选项\r\n        // 取出一个选项的id\r\n        const id = this.question.options[i].id\r\n        let isAnswer = false\r\n        for (let j = 0; j < values.length; j++) { // 拿着\r\n          const value = values[j]\r\n          if (id === value) {\r\n            // 说明这个选项是答案，设置为是答案，直接退出\r\n            isAnswer = true\r\n            this.question.options[i].answer = true\r\n            break // 跳出内部的for循环\r\n          }\r\n        }\r\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\r\n        if (isAnswer === false) {\r\n          this.question.options[i].answer = false\r\n        }\r\n      }\r\n    },\r\n\r\n    popupScroll () {\r\n      console.log('popupScroll')\r\n    },\r\n\r\n    handleUpdate () {\r\n      const that = this\r\n      that.question.name = that.getSummernoteContent('summernote-question-name-edit')\r\n      that.question.description = that.getSummernoteContent('summernote-question-desc-edit')\r\n      console.log(that.question)\r\n      // 把data中的question属性提交到后端，待写完后端接口\r\n      questionUpdate(that.question).then(res => {\r\n        // 成功就跳转到结果页面\r\n        console.log(res)\r\n        if (res.code === 0) {\r\n          that.$notification.success({\r\n            message: '更新成功',\r\n            description: '问题更新成功'\r\n          })\r\n          // 关闭弹出框\r\n          that.visible = false\r\n          that.$emit('ok')\r\n        }\r\n      }).catch(err => {\r\n        // 失败就弹出警告消息\r\n        that.$notification.error({\r\n          message: '更新',\r\n          description: err.message\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}