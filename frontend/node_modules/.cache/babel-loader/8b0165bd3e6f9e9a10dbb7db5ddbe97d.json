{"remainingRequest":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\views\\list\\ExamTableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\views\\list\\ExamTableList.vue","mtime":1683548887962},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../plugins/bootstrap-table\";\nimport { getExamAll } from \"../../api/exam\";\nimport StepByStepExamModal from \"./modules/StepByStepExamModal\";\nimport ExamEditModal from \"./modules/ExamEditModal\";\nimport UpdateAvatarModal from '@views/list/modules/UpdateAvatarModal';\nexport default {\n  name: 'ExamTableList',\n  components: {\n    UpdateAvatarModal: UpdateAvatarModal,\n    ExamEditModal: ExamEditModal,\n    StepByStepExamModal: StepByStepExamModal\n  },\n  data: function data() {\n    var that = this; // 方便在bootstrap-table中引用methods\n    return {\n      // 表头\n      columns: [{\n        title: '序号',\n        field: 'serial',\n        formatter: function formatter(value, row, index) {\n          return index + 1; // 这样的话每翻一页都会重新从1开始，\n        }\n      }, {\n        title: '封面',\n        field: 'avatar',\n        width: 50,\n        formatter: function formatter(value, row) {\n          return '<div class=\"exam-avatar\">' + value + '</div>';\n        },\n        events: {\n          'click .exam-avatar': function clickExamAvatar(e, value, row, index) {\n            that.handleAvatarEdit(row);\n          }\n        }\n      }, {\n        title: '名称',\n        field: 'name',\n        width: 250\n      }, {\n        title: '总分数',\n        field: 'score'\n      }, {\n        title: '创建人',\n        field: 'creator'\n      }, {\n        title: '时长',\n        field: 'elapse'\n      }, {\n        title: '更新时间',\n        field: 'updateTime'\n      }, {\n        title: '操作',\n        field: 'action',\n        width: '150px',\n        formatter: function formatter(value, row) {\n          return '<button type=\"button\" class=\"btn btn-success view-exam\">详情</button>' + '&nbsp;&nbsp;' + '<button type=\"button\" class=\"btn btn-success edit-exam\">编辑</button>';\n        },\n        events: {\n          'click .view-exam': function clickViewExam(e, value, row, index) {\n            that.handleSub(row);\n          },\n          'click .edit-exam': function clickEditExam(e, value, row, index) {\n            that.handleEdit(row);\n          }\n        }\n      }],\n      tableData: [],\n      // bootstrap-table的数据\n      // custom bootstrap-table\n      options: {\n        search: true,\n        showColumns: true,\n        showExport: true,\n        pagination: true,\n        toolbar: '#toolbar',\n        // 下面两行是支持高级搜索，即按照字段搜索\n        advancedSearch: true,\n        idTable: 'advancedTable'\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\n        // onClickRow: that.clickRow,\n        // onClickCell: that.clickCell, // 单元格单击事件\n        // onDblClickCell: that.dblClickCell // 单元格双击事件\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.loadAll(); // 加载所有问题的数据\n  },\n\n  methods: {\n    handleEdit: function handleEdit(record) {\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\n      console.log('开始编辑啦');\n      console.log(record);\n      this.$refs.editExamModal.edit(record);\n    },\n    handleAvatarEdit: function handleAvatarEdit(record) {\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\n      console.log('开始更新封面啦');\n      console.log(record);\n      this.$refs.updateAvatarModal.edit(record);\n    },\n    handleSub: function handleSub(record) {\n      // 查看考试，不在模态框里查啦，太麻烦\n      // console.log(record)\n      // this.$refs.modalView.edit(record)\n\n      // 直接跳到参加考试的页面，查看所有题目的详细情况\n      var routeUrl = this.$router.resolve({\n        path: \"/exam/\".concat(record.id)\n      });\n      // 和点击考试卡片效果一样，跳转到考试页面，里面有所有题目的情况，相当于就是详情了\n      window.open(routeUrl.href, '_blank');\n    },\n    handleOk: function handleOk() {\n      this.loadAll();\n    },\n    loadAll: function loadAll() {\n      var that = this;\n      getExamAll().then(function (res) {\n        if (res.code === 0) {\n          that.tableData = res.data;\n          that.$refs.table._initTable();\n        } else {\n          that.$notification.error({\n            message: '获取全部考试的列表失败',\n            description: res.msg\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"names":["getExamAll","StepByStepExamModal","ExamEditModal","UpdateAvatarModal","name","components","data","that","columns","title","field","formatter","value","row","index","width","events","clickExamAvatar","e","handleAvatarEdit","clickViewExam","handleSub","clickEditExam","handleEdit","tableData","options","search","showColumns","showExport","pagination","toolbar","advancedSearch","idTable","mounted","loadAll","methods","record","console","log","$refs","editExamModal","edit","updateAvatarModal","routeUrl","$router","resolve","path","concat","id","window","open","href","handleOk","then","res","code","table","_initTable","$notification","error","message","description","msg"],"sources":["src/views/list/ExamTableList.vue"],"sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <div id=\"toolbar\">\r\n      <a-button type=\"primary\" icon=\"plus\" @click=\"$refs.createExamModal.create()\">新建</a-button>&nbsp;\r\n      <a-button type=\"primary\" icon=\"reload\" @click=\"loadAll()\">刷新</a-button>\r\n    </div>\r\n    <BootstrapTable\r\n      ref=\"table\"\r\n      :columns=\"columns\"\r\n      :data=\"tableData\"\r\n      :options=\"options\"\r\n    />\r\n    <!-- ref是为了方便用this.$refs.modal直接引用，下同 -->\r\n    <step-by-step-exam-modal ref=\"createExamModal\" @ok=\"handleOk\" />\r\n    <!-- 这里的详情需要传进去  -->\r\n    <exam-edit-modal ref=\"editExamModal\" @ok=\"handleOk\" />\r\n    <!--  更新考试封面图片  -->\r\n    <update-avatar-modal ref=\"updateAvatarModal\" @ok=\"handleOk\" />\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nimport '../../plugins/bootstrap-table'\r\nimport { getExamAll } from '../../api/exam'\r\nimport StepByStepExamModal from './modules/StepByStepExamModal'\r\nimport ExamEditModal from './modules/ExamEditModal'\r\nimport UpdateAvatarModal from '@views/list/modules/UpdateAvatarModal'\r\n\r\nexport default {\r\n  name: 'ExamTableList',\r\n  components: {\r\n    UpdateAvatarModal,\r\n    ExamEditModal,\r\n    StepByStepExamModal\r\n  },\r\n  data () {\r\n    const that = this // 方便在bootstrap-table中引用methods\r\n    return {\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '序号',\r\n          field: 'serial',\r\n          formatter: function (value, row, index) {\r\n            return index + 1 // 这样的话每翻一页都会重新从1开始，\r\n          }\r\n        },\r\n        {\r\n          title: '封面',\r\n          field: 'avatar',\r\n          width: 50,\r\n          formatter: (value, row) => {\r\n            return '<div class=\"exam-avatar\">' + value + '</div>'\r\n          },\r\n          events: {\r\n            'click .exam-avatar': function (e, value, row, index) {\r\n              that.handleAvatarEdit(row)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '名称',\r\n          field: 'name',\r\n          width: 250\r\n        },\r\n        {\r\n          title: '总分数',\r\n          field: 'score'\r\n        },\r\n        {\r\n          title: '创建人',\r\n          field: 'creator'\r\n        },\r\n        {\r\n          title: '时长',\r\n          field: 'elapse'\r\n        },\r\n        {\r\n          title: '更新时间',\r\n          field: 'updateTime'\r\n        },\r\n        {\r\n          title: '操作',\r\n          field: 'action',\r\n          width: '150px',\r\n          formatter: (value, row) => {\r\n            return '<button type=\"button\" class=\"btn btn-success view-exam\">详情</button>' +\r\n              '&nbsp;&nbsp;' +\r\n              '<button type=\"button\" class=\"btn btn-success edit-exam\">编辑</button>'\r\n          },\r\n          events: {\r\n            'click .view-exam': function (e, value, row, index) {\r\n              that.handleSub(row)\r\n            },\r\n            'click .edit-exam': function (e, value, row, index) {\r\n              that.handleEdit(row)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      tableData: [], // bootstrap-table的数据\r\n      // custom bootstrap-table\r\n      options: {\r\n        search: true,\r\n        showColumns: true,\r\n        showExport: true,\r\n        pagination: true,\r\n        toolbar: '#toolbar',\r\n        // 下面两行是支持高级搜索，即按照字段搜索\r\n        advancedSearch: true,\r\n        idTable: 'advancedTable'\r\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\r\n        // onClickRow: that.clickRow,\r\n        // onClickCell: that.clickCell, // 单元格单击事件\r\n        // onDblClickCell: that.dblClickCell // 单元格双击事件\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.loadAll() // 加载所有问题的数据\r\n  },\r\n  methods: {\r\n    handleEdit (record) {\r\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\r\n      console.log('开始编辑啦')\r\n      console.log(record)\r\n      this.$refs.editExamModal.edit(record)\r\n    },\r\n    handleAvatarEdit (record) {\r\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\r\n      console.log('开始更新封面啦')\r\n      console.log(record)\r\n      this.$refs.updateAvatarModal.edit(record)\r\n    },\r\n    handleSub (record) {\r\n      // 查看考试，不在模态框里查啦，太麻烦\r\n      // console.log(record)\r\n      // this.$refs.modalView.edit(record)\r\n\r\n      // 直接跳到参加考试的页面，查看所有题目的详细情况\r\n      const routeUrl = this.$router.resolve({\r\n        path: `/exam/${record.id}`\r\n      })\r\n      // 和点击考试卡片效果一样，跳转到考试页面，里面有所有题目的情况，相当于就是详情了\r\n      window.open(routeUrl.href, '_blank')\r\n    },\r\n    handleOk () {\r\n      this.loadAll()\r\n    },\r\n    loadAll () {\r\n      const that = this\r\n      getExamAll()\r\n        .then(res => {\r\n          if (res.code === 0) {\r\n            that.tableData = res.data\r\n            that.$refs.table._initTable()\r\n          } else {\r\n            that.$notification.error({\r\n              message: '获取全部考试的列表失败',\r\n              description: res.msg\r\n            })\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}