{"remainingRequest":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\store\\modules\\user.js","mtime":1683548887954},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport { login, getInfo, logout } from \"../../api/login\";\nimport { ACCESS_TOKEN } from \"../../store/mutation-types\";\nimport { welcome } from \"../../utils/util\";\nvar user = {\n  state: {\n    token: '',\n    name: '',\n    welcome: '',\n    avatar: '',\n    roles: [],\n    info: {}\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, _ref) {\n      var name = _ref.name,\n        welcome = _ref.welcome;\n      state.name = name;\n      state.welcome = welcome;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_INFO: function SET_INFO(state, info) {\n      state.info = info;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref2, userInfo) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        login(userInfo).then(function (response) {\n          if (response.code === 0) {\n            var token = response.data;\n            // 把接口返回的token字段的值设置到localStorage的token键值对中，token的有效期是1天,Vue.ls中的ls是localStorage的意思\n            Vue.ls.set(ACCESS_TOKEN, token, 24 * 60 * 60 * 1000);\n            // 设置token事件,修改全局变量state中的token值，讲mutations中的SET_TOKEN事件\n            commit('SET_TOKEN', token);\n            resolve();\n          } else {\n            // 自定义错误\n            reject(new Error('用户名或密码错误'));\n          }\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        getInfo().then(function (response) {\n          console.log('/user/info的响应如下：');\n          console.log(response);\n          var result = response.data; // 取出响应体\n\n          if (result.role && result.role.permissions.length > 0) {\n            // 如果权限\n            var role = result.role;\n            role.permissions = result.role.permissions; // permissions是给页面行为设置权限\n            role.permissions.map(function (per) {\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\n                var action = per.actionEntitySet.map(function (action) {\n                  return action.action;\n                });\n                per.actionList = action;\n              }\n            });\n            role.permissionList = role.permissions.map(function (permission) {\n              // permissionList是从permissions中遍历解析得来的\n              return permission.permissionId;\n            });\n\n            // 这些设置都在Vuex的getters里面了\n            commit('SET_ROLES', result.role); // 在store中设置用户的权限\n            commit('SET_INFO', result); // 在store中设置用户信息\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'));\n          }\n\n          // 这些设置都在Vuex的getters里面了\n          commit('SET_NAME', {\n            name: result.name,\n            welcome: welcome()\n          }); // 设置用户名称\n          commit('SET_AVATAR', result.avatar); // 设置用户头像\n\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    Logout: function Logout(_ref4) {\n      var commit = _ref4.commit,\n        state = _ref4.state;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        Vue.ls.remove(ACCESS_TOKEN);\n        logout(state.token).then(function () {\n          resolve();\n        }).catch(function () {\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",null]}