{"remainingRequest":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\list\\ExamTableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\list\\ExamTableList.vue","mtime":1683548887962},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../plugins/bootstrap-table\";\nimport { getExamAll } from \"../../api/exam\";\nimport StepByStepExamModal from \"./modules/StepByStepExamModal\";\nimport ExamEditModal from \"./modules/ExamEditModal\";\nimport UpdateAvatarModal from '@views/list/modules/UpdateAvatarModal';\nexport default {\n  name: 'ExamTableList',\n  components: {\n    UpdateAvatarModal: UpdateAvatarModal,\n    ExamEditModal: ExamEditModal,\n    StepByStepExamModal: StepByStepExamModal\n  },\n  data: function data() {\n    var that = this; // 方便在bootstrap-table中引用methods\n    return {\n      // 表头\n      columns: [{\n        title: '序号',\n        field: 'serial',\n        formatter: function formatter(value, row, index) {\n          return index + 1; // 这样的话每翻一页都会重新从1开始，\n        }\n      }, {\n        title: '封面',\n        field: 'avatar',\n        width: 50,\n        formatter: function formatter(value, row) {\n          return '<div class=\"exam-avatar\">' + value + '</div>';\n        },\n        events: {\n          'click .exam-avatar': function clickExamAvatar(e, value, row, index) {\n            that.handleAvatarEdit(row);\n          }\n        }\n      }, {\n        title: '名称',\n        field: 'name',\n        width: 250\n      }, {\n        title: '总分数',\n        field: 'score'\n      }, {\n        title: '创建人',\n        field: 'creator'\n      }, {\n        title: '时长',\n        field: 'elapse'\n      }, {\n        title: '更新时间',\n        field: 'updateTime'\n      }, {\n        title: '操作',\n        field: 'action',\n        width: '150px',\n        formatter: function formatter(value, row) {\n          return '<button type=\"button\" class=\"btn btn-success view-exam\">详情</button>' + '&nbsp;&nbsp;' + '<button type=\"button\" class=\"btn btn-success edit-exam\">编辑</button>';\n        },\n        events: {\n          'click .view-exam': function clickViewExam(e, value, row, index) {\n            that.handleSub(row);\n          },\n          'click .edit-exam': function clickEditExam(e, value, row, index) {\n            that.handleEdit(row);\n          }\n        }\n      }],\n      tableData: [],\n      // bootstrap-table的数据\n      // custom bootstrap-table\n      options: {\n        search: true,\n        showColumns: true,\n        showExport: true,\n        pagination: true,\n        toolbar: '#toolbar',\n        // 下面两行是支持高级搜索，即按照字段搜索\n        advancedSearch: true,\n        idTable: 'advancedTable'\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\n        // onClickRow: that.clickRow,\n        // onClickCell: that.clickCell, // 单元格单击事件\n        // onDblClickCell: that.dblClickCell // 单元格双击事件\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.loadAll(); // 加载所有问题的数据\n  },\n\n  methods: {\n    handleEdit: function handleEdit(record) {\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\n      console.log('开始编辑啦');\n      console.log(record);\n      this.$refs.editExamModal.edit(record);\n    },\n    handleAvatarEdit: function handleAvatarEdit(record) {\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\n      console.log('开始更新封面啦');\n      console.log(record);\n      this.$refs.updateAvatarModal.edit(record);\n    },\n    handleSub: function handleSub(record) {\n      // 查看考试，不在模态框里查啦，太麻烦\n      // console.log(record)\n      // this.$refs.modalView.edit(record)\n\n      // 直接跳到参加考试的页面，查看所有题目的详细情况\n      var routeUrl = this.$router.resolve({\n        path: \"/exam/\".concat(record.id)\n      });\n      // 和点击考试卡片效果一样，跳转到考试页面，里面有所有题目的情况，相当于就是详情了\n      window.open(routeUrl.href, '_blank');\n    },\n    handleOk: function handleOk() {\n      this.loadAll();\n    },\n    loadAll: function loadAll() {\n      var that = this;\n      getExamAll().then(function (res) {\n        if (res.code === 0) {\n          that.tableData = res.data;\n          that.$refs.table._initTable();\n        } else {\n          that.$notification.error({\n            message: '获取全部考试的列表失败',\n            description: res.msg\n          });\n        }\n      });\n    }\n  }\n};",null]}