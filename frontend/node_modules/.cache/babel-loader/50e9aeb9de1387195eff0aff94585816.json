{"remainingRequest":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\list\\modules\\QuestionEditModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\list\\modules\\QuestionEditModal.vue","mtime":1683548887963},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\babel.config.js","mtime":1683548887923},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"../../../plugins/summernote\";\nimport $ from 'jquery';\nimport { questionUpdate } from \"../../../api/exam\";\nexport default {\n  // 问题查看的弹出框，用于查看问题/修改问题\n  name: 'QuestionEditModal',\n  data: function data() {\n    return {\n      visible: false,\n      size: 'default',\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      // 每个问题\n      question: {},\n      // 单选和判断题的答案\n      answerOptionId: '',\n      // 多选题的答案\n      answerOptionIds: [],\n      radioStyle: {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px'\n      },\n      name: '',\n      desc: ''\n    };\n  },\n  updated: function updated() {\n    this.initSummernote('summernote-question-name-edit');\n    this.initSummernote('summernote-question-desc-edit');\n    this.setSummernoteContent('summernote-question-name-edit', this.name);\n    this.setSummernoteContent('summernote-question-desc-edit', this.desc);\n  },\n  methods: {\n    initSummernote: function initSummernote(divId) {\n      console.log('初始化富文本插件：' + divId);\n      $('#' + divId).summernote({\n        lang: 'zh-CN',\n        placeholder: '请输入内容',\n        height: 200,\n        width: '100%',\n        htmlMode: true,\n        toolbar: [['style', ['bold', 'italic', 'underline', 'clear']], ['fontsize', ['fontsize']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']]],\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n        fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana'],\n        callbacks: {\n          onSubmit: function onSubmit() {\n            this.richContent = $('#summernote').summernote('code');\n          }\n        }\n      });\n    },\n    getSummernoteContent: function getSummernoteContent(divId) {\n      return $('#' + divId).summernote('code');\n    },\n    setSummernoteContent: function setSummernoteContent(divId, content) {\n      return $('#' + divId).summernote('code', content);\n    },\n    edit: function edit(record) {\n      this.name = record.name; // 题干\n      this.desc = record.description; // 解析\n      // 把当前的记录赋值到data中的变量\n      this.question = record;\n      // 上来先把之前的清理干净\n      this.answerOptionId = '';\n      this.answerOptionIds = [];\n      this.visible = true;\n      // 单选题的处理情况,设置默认值\n      for (var i = 0; i < this.question.options.length; i++) {\n        if (this.question.options[i].answer === true) {\n          // 设置单选题或者判断题答案\n          this.answerOptionId = this.question.options[i].id;\n          // 设置多选题的答案\n          this.answerOptionIds.push(this.question.options[i].id);\n        }\n      }\n    },\n    handleCancel: function handleCancel() {\n      // clear form & currentStep\n      this.visible = false;\n    },\n    handleSingleChange: function handleSingleChange(value) {\n      // 单选题的处理情况\n      for (var i = 0; i < this.question.options.length; i++) {\n        if (this.question.options[i].id === value) {\n          // 更新唯一的正确答案\n          this.question.options[i].answer = true;\n          // 设置答案的内容\n          this.answerOptionId = this.question.options[i].id;\n        } else {\n          // id不和答案相同地就设置为false，这样可以保证只有一个正确答案\n          this.question.options[i].answer = false;\n        }\n      }\n      console.log(\"Selected: \".concat(value));\n    },\n    handleMultiChange: function handleMultiChange(values) {\n      console.log(values);\n      // 直接更新选项id的数组\n      this.answerOptionIds = values;\n      // 更新question中options的answer位置\n      for (var i = 0; i < this.question.options.length; i++) {\n        // 遍历所有的题目的选项\n        // 取出一个选项的id\n        var id = this.question.options[i].id;\n        var isAnswer = false;\n        for (var j = 0; j < values.length; j++) {\n          // 拿着\n          var value = values[j];\n          if (id === value) {\n            // 说明这个选项是答案，设置为是答案，直接退出\n            isAnswer = true;\n            this.question.options[i].answer = true;\n            break; // 跳出内部的for循环\n          }\n        }\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\n        if (isAnswer === false) {\n          this.question.options[i].answer = false;\n        }\n      }\n    },\n    popupScroll: function popupScroll() {\n      console.log('popupScroll');\n    },\n    handleUpdate: function handleUpdate() {\n      var that = this;\n      that.question.name = that.getSummernoteContent('summernote-question-name-edit');\n      that.question.description = that.getSummernoteContent('summernote-question-desc-edit');\n      console.log(that.question);\n      // 把data中的question属性提交到后端，待写完后端接口\n      questionUpdate(that.question).then(function (res) {\n        // 成功就跳转到结果页面\n        console.log(res);\n        if (res.code === 0) {\n          that.$notification.success({\n            message: '更新成功',\n            description: '问题更新成功'\n          });\n          // 关闭弹出框\n          that.visible = false;\n          that.$emit('ok');\n        }\n      }).catch(function (err) {\n        // 失败就弹出警告消息\n        that.$notification.error({\n          message: '更新',\n          description: err.message\n        });\n      });\n    }\n  }\n};",null]}