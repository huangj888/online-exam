{"remainingRequest":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\test\\BootStrapTableDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\src\\views\\test\\BootStrapTableDemo.vue","mtime":1683548887965},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\projectOfweb\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport '../../plugins/bootstrap-table'\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n  data () {\r\n    const that = this // 方便在bootstrap-table中引用methods\r\n    return {\r\n      columns: [\r\n        {\r\n          field: 'state',\r\n          checkbox: true\r\n        },\r\n        {\r\n          title: 'Item ID',\r\n          field: 'id'\r\n        },\r\n        {\r\n          field: 'name',\r\n          title: 'Item Name'\r\n        },\r\n        {\r\n          field: 'price',\r\n          title: 'Item Price'\r\n        },\r\n        {\r\n          field: 'actions',\r\n          title: 'Actions',\r\n          align: 'center',\r\n          formatter: (value, row) => {\r\n            return '<button type=\"button\" class=\"btn btn-success mybtn\">Success</button>'\r\n          },\r\n          events: {\r\n            'click .mybtn': function (e, value, row, index) { // 双击是dblclick\r\n              that.clickRow(row, value, index)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      data: {\r\n        total: 5,\r\n        rows: [\r\n          {\r\n            id: 1,\r\n            name: 'Item 1',\r\n            price: '$1'\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Item 2',\r\n            price: '$2'\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Item 3',\r\n            price: '$3'\r\n          },\r\n          {\r\n            id: 4,\r\n            name: 'Item 4',\r\n            price: '$4'\r\n          },\r\n          {\r\n            id: 5,\r\n            name: 'Item 5',\r\n            price: '$5'\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        search: true,\r\n        showColumns: true,\r\n        showExport: true,\r\n        showRefresh: true,\r\n        // 下面两行是支持高级搜索，即按照字段搜索\r\n        advancedSearch: true,\r\n        idTable: 'advancedTable',\r\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\r\n        // onClickRow: that.clickRow,\r\n        // onClickCell: that.clickCell, // 单元格单击事件\r\n        onDblClickCell: that.dblClickCell // 单元格双击事件\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    clickRow (row, value, index) {\r\n      alert(JSON.stringify(row) + ', ' + index)\r\n    },\r\n    clickCell (field, value, row, $element) {\r\n      alert(JSON.stringify(field))\r\n    },\r\n    /**\r\n     * 单元格双击事件\r\n     * @param field 字段名，如id、name、price等\r\n     * @param value 字段值 如Item 1、$1等\r\n     * @param row 一行的值，如{\"id\":3,\"name\":\"Item 3\",\"price\":\"$3\"}\r\n     * @param $element 行所在的dom元素，可以动态往里面加入页面元素，比如双击可编辑或者弹出富文本框等\r\n     */\r\n    dblClickCell (field, value, row, $element) {\r\n      console.log($element.text()) // 获取元素的值\r\n      console.log($element.html()) // 获取页面元素的值\r\n      const p = $('<p>弹框出现前修改内容</p>')\r\n      $element.append(p)\r\n      console.log($element.text()) // 获取元素的值\r\n      row[field] = $element.text() // 更新行的值\r\n      alert(field + ':' + row + ', ' + JSON.stringify(row))\r\n      const index = $element.parent().attr('data-index') // 获取当前行的数据的id，方便更新data中的rows数组\r\n      row[field] = '弹框出现后修改内容'\r\n      this.data.rows[index] = row\r\n      this.$refs.table._initTable() // 直接看源码找出这么个重新渲染表格的事件\r\n    }\r\n  }\r\n}\r\n",null]}