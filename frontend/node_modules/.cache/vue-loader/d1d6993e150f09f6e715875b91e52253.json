{"remainingRequest":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\views\\list\\ExamTableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\src\\views\\list\\ExamTableList.vue","mtime":1683548887962},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JuniorStudent\\spring-boot-online-exam\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport '../../plugins/bootstrap-table'\r\nimport { getExamAll } from '../../api/exam'\r\nimport StepByStepExamModal from './modules/StepByStepExamModal'\r\nimport ExamEditModal from './modules/ExamEditModal'\r\nimport UpdateAvatarModal from '@views/list/modules/UpdateAvatarModal'\r\n\r\nexport default {\r\n  name: 'ExamTableList',\r\n  components: {\r\n    UpdateAvatarModal,\r\n    ExamEditModal,\r\n    StepByStepExamModal\r\n  },\r\n  data () {\r\n    const that = this // 方便在bootstrap-table中引用methods\r\n    return {\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '序号',\r\n          field: 'serial',\r\n          formatter: function (value, row, index) {\r\n            return index + 1 // 这样的话每翻一页都会重新从1开始，\r\n          }\r\n        },\r\n        {\r\n          title: '封面',\r\n          field: 'avatar',\r\n          width: 50,\r\n          formatter: (value, row) => {\r\n            return '<div class=\"exam-avatar\">' + value + '</div>'\r\n          },\r\n          events: {\r\n            'click .exam-avatar': function (e, value, row, index) {\r\n              that.handleAvatarEdit(row)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '名称',\r\n          field: 'name',\r\n          width: 250\r\n        },\r\n        {\r\n          title: '总分数',\r\n          field: 'score'\r\n        },\r\n        {\r\n          title: '创建人',\r\n          field: 'creator'\r\n        },\r\n        {\r\n          title: '时长',\r\n          field: 'elapse'\r\n        },\r\n        {\r\n          title: '更新时间',\r\n          field: 'updateTime'\r\n        },\r\n        {\r\n          title: '操作',\r\n          field: 'action',\r\n          width: '150px',\r\n          formatter: (value, row) => {\r\n            return '<button type=\"button\" class=\"btn btn-success view-exam\">详情</button>' +\r\n              '&nbsp;&nbsp;' +\r\n              '<button type=\"button\" class=\"btn btn-success edit-exam\">编辑</button>'\r\n          },\r\n          events: {\r\n            'click .view-exam': function (e, value, row, index) {\r\n              that.handleSub(row)\r\n            },\r\n            'click .edit-exam': function (e, value, row, index) {\r\n              that.handleEdit(row)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      tableData: [], // bootstrap-table的数据\r\n      // custom bootstrap-table\r\n      options: {\r\n        search: true,\r\n        showColumns: true,\r\n        showExport: true,\r\n        pagination: true,\r\n        toolbar: '#toolbar',\r\n        // 下面两行是支持高级搜索，即按照字段搜索\r\n        advancedSearch: true,\r\n        idTable: 'advancedTable'\r\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\r\n        // onClickRow: that.clickRow,\r\n        // onClickCell: that.clickCell, // 单元格单击事件\r\n        // onDblClickCell: that.dblClickCell // 单元格双击事件\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.loadAll() // 加载所有问题的数据\r\n  },\r\n  methods: {\r\n    handleEdit (record) {\r\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\r\n      console.log('开始编辑啦')\r\n      console.log(record)\r\n      this.$refs.editExamModal.edit(record)\r\n    },\r\n    handleAvatarEdit (record) {\r\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\r\n      console.log('开始更新封面啦')\r\n      console.log(record)\r\n      this.$refs.updateAvatarModal.edit(record)\r\n    },\r\n    handleSub (record) {\r\n      // 查看考试，不在模态框里查啦，太麻烦\r\n      // console.log(record)\r\n      // this.$refs.modalView.edit(record)\r\n\r\n      // 直接跳到参加考试的页面，查看所有题目的详细情况\r\n      const routeUrl = this.$router.resolve({\r\n        path: `/exam/${record.id}`\r\n      })\r\n      // 和点击考试卡片效果一样，跳转到考试页面，里面有所有题目的情况，相当于就是详情了\r\n      window.open(routeUrl.href, '_blank')\r\n    },\r\n    handleOk () {\r\n      this.loadAll()\r\n    },\r\n    loadAll () {\r\n      const that = this\r\n      getExamAll()\r\n        .then(res => {\r\n          if (res.code === 0) {\r\n            that.tableData = res.data\r\n            that.$refs.table._initTable()\r\n          } else {\r\n            that.$notification.error({\r\n              message: '获取全部考试的列表失败',\r\n              description: res.msg\r\n            })\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ExamTableList.vue"],"names":[],"mappings":";AAsfile":"ExamTableList.vue","sourceRoot":"src/views/list","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <div id=\"toolbar\">\r\n      <a-button type=\"primary\" icon=\"plus\" @click=\"$refs.createExamModal.create()\">新建</a-button>&nbsp;\r\n      <a-button type=\"primary\" icon=\"reload\" @click=\"loadAll()\">刷新</a-button>\r\n    </div>\r\n    <BootstrapTable\r\n      ref=\"table\"\r\n      :columns=\"columns\"\r\n      :data=\"tableData\"\r\n      :options=\"options\"\r\n    />\r\n    <!-- ref是为了方便用this.$refs.modal直接引用，下同 -->\r\n    <step-by-step-exam-modal ref=\"createExamModal\" @ok=\"handleOk\" />\r\n    <!-- 这里的详情需要传进去  -->\r\n    <exam-edit-modal ref=\"editExamModal\" @ok=\"handleOk\" />\r\n    <!--  更新考试封面图片  -->\r\n    <update-avatar-modal ref=\"updateAvatarModal\" @ok=\"handleOk\" />\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nimport '../../plugins/bootstrap-table'\r\nimport { getExamAll } from '../../api/exam'\r\nimport StepByStepExamModal from './modules/StepByStepExamModal'\r\nimport ExamEditModal from './modules/ExamEditModal'\r\nimport UpdateAvatarModal from '@views/list/modules/UpdateAvatarModal'\r\n\r\nexport default {\r\n  name: 'ExamTableList',\r\n  components: {\r\n    UpdateAvatarModal,\r\n    ExamEditModal,\r\n    StepByStepExamModal\r\n  },\r\n  data () {\r\n    const that = this // 方便在bootstrap-table中引用methods\r\n    return {\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '序号',\r\n          field: 'serial',\r\n          formatter: function (value, row, index) {\r\n            return index + 1 // 这样的话每翻一页都会重新从1开始，\r\n          }\r\n        },\r\n        {\r\n          title: '封面',\r\n          field: 'avatar',\r\n          width: 50,\r\n          formatter: (value, row) => {\r\n            return '<div class=\"exam-avatar\">' + value + '</div>'\r\n          },\r\n          events: {\r\n            'click .exam-avatar': function (e, value, row, index) {\r\n              that.handleAvatarEdit(row)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '名称',\r\n          field: 'name',\r\n          width: 250\r\n        },\r\n        {\r\n          title: '总分数',\r\n          field: 'score'\r\n        },\r\n        {\r\n          title: '创建人',\r\n          field: 'creator'\r\n        },\r\n        {\r\n          title: '时长',\r\n          field: 'elapse'\r\n        },\r\n        {\r\n          title: '更新时间',\r\n          field: 'updateTime'\r\n        },\r\n        {\r\n          title: '操作',\r\n          field: 'action',\r\n          width: '150px',\r\n          formatter: (value, row) => {\r\n            return '<button type=\"button\" class=\"btn btn-success view-exam\">详情</button>' +\r\n              '&nbsp;&nbsp;' +\r\n              '<button type=\"button\" class=\"btn btn-success edit-exam\">编辑</button>'\r\n          },\r\n          events: {\r\n            'click .view-exam': function (e, value, row, index) {\r\n              that.handleSub(row)\r\n            },\r\n            'click .edit-exam': function (e, value, row, index) {\r\n              that.handleEdit(row)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      tableData: [], // bootstrap-table的数据\r\n      // custom bootstrap-table\r\n      options: {\r\n        search: true,\r\n        showColumns: true,\r\n        showExport: true,\r\n        pagination: true,\r\n        toolbar: '#toolbar',\r\n        // 下面两行是支持高级搜索，即按照字段搜索\r\n        advancedSearch: true,\r\n        idTable: 'advancedTable'\r\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\r\n        // onClickRow: that.clickRow,\r\n        // onClickCell: that.clickCell, // 单元格单击事件\r\n        // onDblClickCell: that.dblClickCell // 单元格双击事件\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.loadAll() // 加载所有问题的数据\r\n  },\r\n  methods: {\r\n    handleEdit (record) {\r\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\r\n      console.log('开始编辑啦')\r\n      console.log(record)\r\n      this.$refs.editExamModal.edit(record)\r\n    },\r\n    handleAvatarEdit (record) {\r\n      // Todo:修改考试信息和下面的题目，弹出一个可修改的输入框，实际上复用创建题目的模态框即可，还没做完\r\n      console.log('开始更新封面啦')\r\n      console.log(record)\r\n      this.$refs.updateAvatarModal.edit(record)\r\n    },\r\n    handleSub (record) {\r\n      // 查看考试，不在模态框里查啦，太麻烦\r\n      // console.log(record)\r\n      // this.$refs.modalView.edit(record)\r\n\r\n      // 直接跳到参加考试的页面，查看所有题目的详细情况\r\n      const routeUrl = this.$router.resolve({\r\n        path: `/exam/${record.id}`\r\n      })\r\n      // 和点击考试卡片效果一样，跳转到考试页面，里面有所有题目的情况，相当于就是详情了\r\n      window.open(routeUrl.href, '_blank')\r\n    },\r\n    handleOk () {\r\n      this.loadAll()\r\n    },\r\n    loadAll () {\r\n      const that = this\r\n      getExamAll()\r\n        .then(res => {\r\n          if (res.code === 0) {\r\n            that.tableData = res.data\r\n            that.$refs.table._initTable()\r\n          } else {\r\n            that.$notification.error({\r\n              message: '获取全部考试的列表失败',\r\n              description: res.msg\r\n            })\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}